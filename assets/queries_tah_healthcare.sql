----------------------------------------------------------------------------------------------

-- Project Industry: Healthcare 
-- Description: Improving hospital operational efficiency and patient outcomes
-- Tool: SQL (analysis), Looker Studio (visualization)

----------------------------------------------------------------------------------------------

-- Start 

-- Part 1: Creating DB tables
DROP TABLE IF EXISTS patients;
CREATE TABLE patients (
                            patient_id VARCHAR(15) NOT NULL,   -- PK
                            patient_name VARCHAR(15),
                            gender	VARCHAR(7),
                            date_of_birth DATE
);


DROP TABLE IF EXISTS billing;
CREATE TABLE billing (
                            visit_id VARCHAR(9),   -- FK
                            amount_paid	FLOAT,
                            amount_due FLOAT,
                            payment_status VARCHAR(15)

);


DROP TABLE IF EXISTS treatments;
CREATE TABLE treatments (
                            visit_id VARCHAR(9),	-- FK
                            diagnosis VARCHAR(10),	
                            treatment_procedure VARCHAR(20),
                            treatment_cost FLOAT

);


DROP TABLE IF EXISTS visits;
CREATE TABLE visits (
                            visit_id VARCHAR(9) NOT NULL,     -- PK
                            patient_id VARCHAR(11),
                            visit_date DATE,
                            department	VARCHAR(17),
                            doctor_id VARCHAR(10)

);

SELECT * FROM patients;
SELECT * FROM billing;
SELECT * FROM treatments;
SELECT * FROM visits;


-- NB: 
-- 1. Data cleaning
-- The data cleaning task was not part of the scope for the Data Navigators team
-- 2. Data ingestion
-- Used sql command line to ingest csv records into the db tables (see README file)


-- Part 2: Modeling 
ALTER TABLE patients
ADD CONSTRAINT patients_pk 
PRIMARY KEY (patient_id);

ALTER TABLE visits
ADD CONSTRAINT visits_pk 
PRIMARY KEY (visit_id);

ALTER TABLE billing
ADD CONSTRAINT billing_fk
FOREIGN KEY (visit_id)
REFERENCES visits(visit_id)
ON DELETE NO ACTION;

ALTER TABLE treatments
ADD CONSTRAINT treatments_fk
FOREIGN KEY (visit_id)
REFERENCES visits(visit_id)
ON DELETE NO ACTION;

SELECT * 
FROM information_schema.table_constraints
WHERE constraint_name IN ('patients_pk', 'visits_pk', 'billing_fk', 'treatments_fk' );


-- Part 3: Answering Business Questions
-- 1. Top Diagnoses: What are the 5 most frequently occuring diagnoses in the past 6 months?
SELECT 
        t.diagnosis, 
        COUNT(v.visit_id) AS occurance
FROM treatments AS t 

LEFT JOIN visits AS v 
ON t.visit_id = v.visit_id

WHERE v.visit_date BETWEEN '2023-07-01' AND '2024-01-01'
GROUP BY t.diagnosis
ORDER BY occurance DESC 

LIMIT 5;


-- 2. Departmental Workload: How many visits occurred in each department?
SELECT 
        department,
        COUNT(visit_id) AS visits
FROM visits 
GROUP BY department
ORDER BY visits DESC;


-- 3. Revenue by Department: What is the total treatment revenue generated by each department?
SELECT 
        v.department, 
        SUM(b.amount_paid) AS revenue, 
        COUNT(v.visit_id) AS visits
FROM visits AS v

LEFT JOIN billing AS b
ON  v.visit_id = b.visit_id

WHERE payment_status = 'Paid' 
GROUP BY v.department
ORDER BY revenue DESC;


-- 4. Doctor Efficiency: Which 5 doctors attended to the most patients?
SELECT 
        doctor_id AS doctors,
        COUNT(DISTINCT patient_id) AS patients_attended_to
FROM visits
GROUP BY doctors
ORDER BY patients_attended_to DESC;


-- End